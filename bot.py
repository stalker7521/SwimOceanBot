import json
from tempfile import TemporaryDirectory
from pathlib import Path
import streamlit as st
import telebot
from telebot.types import ReactionTypeEmoji
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from settings import TOKEN, SPREADSHEET_ID, WORKSHEET_NAME, user_column_map, SCOPE
from datetime import datetime

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)


# /todo –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets
def get_gsheet_client():
    cred_str = st.secrets['CREDS']
    creds_obj = json.loads(cred_str)
    tmp_dir = TemporaryDirectory()
    tmp_dir_path = Path(tmp_dir.name)
    json_path = tmp_dir_path / 'creds.json'
    with open(json_path, 'w') as f:
        f.write(json.dumps(creds_obj, indent=2))
    creds = ServiceAccountCredentials.from_json_keyfile_name(json_path, SCOPE)
    client = gspread.authorize(creds)
    tmp_dir.cleanup()
    return client


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheets
def write_to_sheet(value, usr_id, date):
    """–ë–µ—Ä–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É"""
    if date == "":
        date = datetime.now().strftime("%d.%m.%Y")  # -> "13.04.2025"

    try:
        client = get_gsheet_client()
        sheet = client.open_by_key(SPREADSHEET_ID).worksheet(WORKSHEET_NAME)
        """–ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∞—Ç–æ–π"""
        dates = sheet.col_values(1)  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞—Ç—ã –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ A (–æ–Ω —Å –¥–∞—Ç–∞–º–∏)
        # if user_column_map[usr_id]:
        usr_name = user_column_map[usr_id]  # –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∏–∑ —Å–ª–æ–≤–∞—Ä—è –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ tg-id
        col_names = sheet.row_values(1)  # —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–º–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        col_index = col_names.index(usr_name) + 1
        row_num = dates.index(date) + 1  # +1 —Ç.–∫. –Ω—É–º–µ—Ä–∞—Ü–∏—è —Å 1
        sheet.update_cell(row_num, col_index, value)  # –¥–æ–±–∞–≤–ª—è–µ–º –≤ –ø–æ—Å–ª–µ–¥–Ω—é—é —è—á–µ–π–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞ –¥–∞–Ω–Ω—ã–µ
        print(f'Value "{value}" appended to sheet')

    except Exception as e:
        print(f'An error occurred: {e}')


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–±—â–µ–π –±–∞–∑–µ
def verify_id(user_id):
    if user_column_map[user_id]:
        return True


def plus_message_handling(message):
    return message.text.startswith('+')


def plus_data_message_handing(message):
    return plus_message_handling(message) and message.text.split()[0][1:].isdigit() and len(message.text.split()) == 2


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤–∏–¥–∞: +–º–µ—Ç—Ä—ã –¥–∞—Ç–∞_–∫—É–¥–∞_–Ω—É–∂–Ω–æ_–∑–∞–ø–∏—Å–∞—Ç—å_–º–µ—Ç—Ä—ã
@bot.message_handler(func=plus_data_message_handing)
def handle_number_with_data_message(message):
    number = message.text.split()[0][1:]
    date = str(message.text.split()[1])
    # –ë–ª–æ–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∏–º–æ–π –¥–∞—Ç—ã
    pattern_of_date = "%d.%m.%Y"  # –ø–∞—Ç—Ç–µ—Ä–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∞—Ç—ã
    isValid = True
    try:
        isValid = bool(datetime.strptime(date, pattern_of_date))
    except ValueError:
        isValid = False
    if isValid:
        user_id = str(message.from_user.id)
        if verify_id(user_id):
            print(f'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ: {user_id}')
            write_to_sheet(number, user_id, date)  # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —á–∏—Å–ª–æ –≤ —Ç–∞–±–ª–∏—Ü—É
            # list_of_data.append(number)  # –¥–æ–±–∞–≤–ª—è–µ–º —á–∏—Å–ª–æ –≤ —Å–ø–∏—Å–æ–∫
            # count_of_dist += int(number)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–±—â–∏–π —Å—á–µ—Ç—á–∏–∫
            bot.reply_to(message, f'–ß–∏—Å–ª–æ {number} –±—ã–ª–æ –∑–∞–ø–∏—Å–∞–Ω–æ –≤ –¥–∞—Ç—É: {date}')
            bot.set_message_reaction(chat_id=message.chat.id,
                                     message_id=message.id,
                                     reaction=[ReactionTypeEmoji("‚úç")]
                                     )
        else:
            bot.reply_to(message, "–í–∞—Å –Ω–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ –∏–ª–∏ –≤–∞—à–µ–≥–æ ID –Ω–µ—Ç –≤ –æ–±—â–µ–π –±–∞–∑–µ")
    else:
        bot.set_message_reaction(chat_id=message.chat.id,
                                 message_id=message.id,
                                 reaction=[ReactionTypeEmoji("üëé")])
        bot.reply_to(message, '–î–∞—Ç–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –≤ /help')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å "+" –∏ —á–∏—Å–ª–∞
@bot.message_handler(func=plus_message_handling)
def handle_number_message(message):
    number = message.text[1:]
    if plus_message_handling(message) and message.text[1:].isdigit():
        user_id = str(message.from_user.id)
        date = ""
        print(f'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ: {user_id}')
        write_to_sheet(number, user_id, date)  # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —á–∏—Å–ª–æ –≤ —Ç–∞–±–ª–∏—Ü—É

        bot.set_message_reaction(chat_id=message.chat.id,
                                 message_id=message.id,
                                 reaction=[ReactionTypeEmoji("‚úç")]
                                 )
    else:
        bot.set_message_reaction(chat_id=message.chat.id,
                                 message_id=message.id,
                                 reaction=[ReactionTypeEmoji("üëé")])
        bot.reply_to(message, '–ö–æ–º–∞–Ω–¥–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –≤ /help')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø—Ä–æ–ø–ª—ã–ª–∏, –≤ —Ç–∞–±–ª–∏—Ü—É. "
                          "–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ —è –ø–æ–Ω–∏–º–∞—é, –∏ —Ñ–æ—Ä–º–∞—Ç, "
                          "–≤ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –º–µ—Ç—Ä—ã, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help")


# /todo –î–æ–¥–µ–ª–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã help, –¥–æ–∫–∏–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def handle_help(message):
    bot.reply_to(message, "–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ –≤–∏–¥–µ –º–µ—Ç—Ä–æ–≤\n"
                          "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –ø—Ä–∞–≤–∏–ª –∑–∞–ø–∏—Å–∏:\n\n"
                          "+<–∫–æ–ª-–≤–æ_–º–µ—Ç—Ä–æ–≤> - –∑–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç—Ä—ã (–ø—Ä–∏–º–µ—Ä: +1000)\n"
                          "+<–∫–æ–ª-–≤–æ_–º–µ—Ç—Ä–æ–≤ –¥–∞—Ç–∞> - –∑–∞–ø–∏—Å–∞—Ç—å –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É\n (–ø—Ä–∏–º–µ—Ä: +100 19.04.2025)\n"
                          "")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    st.write('Bot is running...')
    bot.polling(none_stop=True)
    st.stop()
